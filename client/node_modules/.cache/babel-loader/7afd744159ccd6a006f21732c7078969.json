{"ast":null,"code":"function TileGenerator(type, tile, category, subcategory, project) {\n  ///////////////////////////////\n  // Determining Subcategories //\n  ///////////////////////////////\n  const subCategoriesFloor = () => {\n    return ['Wood', 'Carpet', 'Tile'];\n  };\n\n  const subCategoriesBath = () => {\n    return ['Sink', 'Bathtub', 'Shower'];\n  };\n\n  const subCategoriesWall = () => {\n    return ['Drywall', 'Hanging', 'Painting'];\n  };\n\n  const subCategoriesOutdoor = () => {\n    return ['Patio', 'Fire Pit', 'Exterior'];\n  };\n\n  const subCategoriesKitchen = () => {\n    return ['Sink', 'Cabinets', 'Counter Tops'];\n  };\n\n  const subCategoriesRoof = () => {\n    return ['Metal Roof', 'Vinyl Roof', 'Clay Tile', 'Concrete Tile'];\n  };\n\n  const subCategoriesLighting = () => {\n    return ['Indoor Lighting', 'Outdoor Lighting'];\n  };\n\n  const determineSubcategories = category => {\n    if (category === 'Floor') return subCategoriesFloor();else if (category === 'Bath') return subCategoriesBath();else if (category === 'Wall') return subCategoriesWall();else if (category === 'Outdoor') return subCategoriesOutdoor();else if (category === 'Kitchen') return subCategoriesKitchen();else if (category === 'Roof') return subCategoriesRoof();else return subCategoriesLighting();\n  }; //////////////////////////\n  // Determining Projects //\n  //////////////////////////\n  // Floor \n\n\n  const projectsForFloor = subcategory => {\n    if (subcategory === 'Wood') return projectsforFloorWood();else return projectsForFloorCarpet();\n  };\n\n  const projectsforFloorWood = () => {\n    return ['Ripping Up Floors', 'Laying Floors'];\n  };\n\n  const projectsForFloorCarpet = () => {\n    return ['Ripping Up Carpet', 'Laying Carpet'];\n  }; // Bath\n\n\n  const projectsForBath = subcategory => {\n    if (subcategory === 'Sink') return projectsForBathSink();else if (subcategory === 'Bathtub') return projectsForBathBathtub();else return projectsForBathShower();\n  };\n\n  const projectsForBathSink = () => {\n    return ['Adding Plumbing', 'Attaching Vanity'];\n  };\n\n  const projectsForBathBathtub = () => {\n    return ['Adding Drain', 'Inserting Tub'];\n  };\n\n  const projectsForBathShower = () => {\n    return ['Tiling Wall', 'Tiling Floor', 'Adding Drain', 'Attaching Insert'];\n  }; // Wall\n\n\n  const projectsForWall = subcategory => {\n    if (subcategory === 'Drywall') {\n      return projectsForWallDrywall();\n    }\n\n    if (subcategory === 'Hanging') {\n      return projectsForWallHanging();\n    } else {\n      return projectsForWallPainting();\n    }\n  };\n\n  const projectsForWallDrywall = () => {\n    return ['Patching', 'Adding Panel', 'Insulation'];\n  };\n\n  const projectsForWallHanging = () => {\n    return ['Hanging Painting', 'Adding Panel'];\n  };\n\n  const projectsForWallPainting = () => {\n    return ['Painting Wall'];\n  }; // Outdoor\n\n\n  const projectsFortOutdoor = subcategory => {\n    if (subcategory === 'Patio') return projectsForOutdoorPatio();\n    if (subcategory === 'Fire Pit') return projectsForOutdoorFirePit();else return projectsForOutdoorExterior();\n  };\n\n  const projectsForOutdoorPatio = () => {\n    return ['Wood Patio', 'Paver Patio'];\n  };\n\n  const projectsForOutdoorFirePit = () => {\n    return ['Inground Pit', 'Paver Pit'];\n  };\n\n  const projectsForOutdoorExterior = () => {\n    return ['Siding', 'Painting', 'Stucco'];\n  }; // Kitchen \n\n\n  const projectsForKitchen = subcategory => {\n    if (subcategory === 'Sink') return projectsForKitchenSink();\n    if (subcategory === 'Cabinets') return projectsForKitchenCabinets();else return projectsForKitchenCounterTops();\n  };\n\n  const projectsForKitchenSink = () => {\n    return ['Installing Sink', 'Fixing Sink Plumbing'];\n  };\n\n  const projectsForKitchenCabinets = () => {\n    return ['Painting Cabinets', 'Installing Cabinets', 'Removing Cabinets'];\n  };\n\n  const projectsForKitchenCounterTops = () => {\n    return ['Granite', 'Butcher Block', 'Vinyl'];\n  }; // Roof \n\n\n  const projectsForRoof = subcategory => {\n    if (subcategory === 'Metal Roof') return projectsForRoofMetalRoof();\n    if (subcategory === 'Vinyl Roof') return projectsForRoofVinylRoof();\n    if (subcategory === 'Clay Tile') return projectsForRoofClayTile();else return projectsForRoofConcreteTile();\n  };\n\n  const projectsForRoofMetalRoof = () => {\n    return ['Patching Roof', 'Replacing Roof'];\n  };\n\n  const projectsForRoofVinylRoof = () => {\n    return ['Patching Roof', 'Replacing Roof'];\n  };\n\n  const projectsForRoofClayTile = () => {\n    return ['Patching Roof', 'Replacing Roof'];\n  };\n\n  const projectsForRoofConcreteTile = () => {\n    return ['Patching Roof', 'Replacing Roof'];\n  }; // Lighting\n\n\n  const projectsForLighting = subcategory => {\n    if (subcategory === 'Indoor Lighting') return projectsForLightingIndoorLighting();else return projectsForLightingOutdoorLighting();\n  };\n\n  const projectsForLightingIndoorLighting = () => {\n    return ['Ceiling Fan', 'Ceiling Light'];\n  };\n\n  const projectsForLightingOutdoorLighting = () => {\n    return ['Porch Lighting', 'Flood Light'];\n  };\n\n  const determineProjects = subcategory => {\n    if (category === 'Floor') return projectsForFloor(subcategory);else if (category === 'Bath') return projectsForBath(subcategory);else if (category === 'Wall') return projectsForWall(subcategory);else if (category === 'Outdoor') return projectsFortOutdoor();else if (category === 'Kitchen') return projectsForKitchen(subcategory);else if (category === 'Roof') return projectsForRoof(subcategory);else return projectsForLighting(subcategory);\n  };\n\n  const determineTools = project => {\n    return ['tool1', 'tool2', 'tool3'];\n  };\n\n  if (type === 'categories') {\n    return determineSubcategories(tile);\n  } else if (type === 'subcategories') {\n    return determineProjects(tile);\n  } else if (type === 'projects') {\n    return determineTools(tile);\n  } else {\n    return '';\n  }\n}\n\nexport default TileGenerator;","map":{"version":3,"sources":["/Users/ben/Documents/diy-home-tools/client/src/Generators/tileGenerator.js"],"names":["TileGenerator","type","tile","category","subcategory","project","subCategoriesFloor","subCategoriesBath","subCategoriesWall","subCategoriesOutdoor","subCategoriesKitchen","subCategoriesRoof","subCategoriesLighting","determineSubcategories","projectsForFloor","projectsforFloorWood","projectsForFloorCarpet","projectsForBath","projectsForBathSink","projectsForBathBathtub","projectsForBathShower","projectsForWall","projectsForWallDrywall","projectsForWallHanging","projectsForWallPainting","projectsFortOutdoor","projectsForOutdoorPatio","projectsForOutdoorFirePit","projectsForOutdoorExterior","projectsForKitchen","projectsForKitchenSink","projectsForKitchenCabinets","projectsForKitchenCounterTops","projectsForRoof","projectsForRoofMetalRoof","projectsForRoofVinylRoof","projectsForRoofClayTile","projectsForRoofConcreteTile","projectsForLighting","projectsForLightingIndoorLighting","projectsForLightingOutdoorLighting","determineProjects","determineTools"],"mappings":"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","sourcesContent":["function TileGenerator(type,tile,category,subcategory,project) {\n    \n      ///////////////////////////////\n     // Determining Subcategories //\n    ///////////////////////////////\n\n    const subCategoriesFloor = () => {\n        return ['Wood','Carpet','Tile'];\n    }\n\n    const subCategoriesBath = () => {\n        return  ['Sink','Bathtub','Shower'];\n    }\n\n    const subCategoriesWall = () => {\n        return ['Drywall','Hanging', 'Painting'];\n    }\n\n    const subCategoriesOutdoor = () => {\n        return ['Patio','Fire Pit','Exterior'];\n    }\n\n    const subCategoriesKitchen= () => {\n        return ['Sink','Cabinets','Counter Tops'];\n    }\n\n    const subCategoriesRoof = () => {\n        return ['Metal Roof', 'Vinyl Roof', 'Clay Tile', 'Concrete Tile'];\n    }\n\n    const subCategoriesLighting = () => {\n        return ['Indoor Lighting', 'Outdoor Lighting'];\n    }\n       \n\n    const determineSubcategories = (category) => {\n        if(category  === 'Floor') \n            return subCategoriesFloor();\n        else if(category === 'Bath')\n            return subCategoriesBath();\n        else if(category === 'Wall')\n            return subCategoriesWall();\n        else if(category === 'Outdoor')\n            return subCategoriesOutdoor();\n        else if(category === 'Kitchen') \n            return subCategoriesKitchen();\n        else if(category === 'Roof')\n            return subCategoriesRoof();\n        else\n            return subCategoriesLighting();\n    }\n\n      //////////////////////////\n     // Determining Projects //\n    //////////////////////////\n\n\n    // Floor \n\n    const projectsForFloor = (subcategory) => {\n        if(subcategory === 'Wood')\n            return projectsforFloorWood();\n        else \n            return projectsForFloorCarpet();\n    }\n\n    const projectsforFloorWood = () => {\n        return ['Ripping Up Floors','Laying Floors'];\n    }\n\n    const projectsForFloorCarpet = () => {\n        return ['Ripping Up Carpet','Laying Carpet'];\n    }\n\n    // Bath\n\n    const projectsForBath = (subcategory) => {\n        if(subcategory === 'Sink')\n            return projectsForBathSink();\n        else if(subcategory === 'Bathtub')\n            return projectsForBathBathtub();\n        else \n            return projectsForBathShower();\n    }\n\n    const projectsForBathSink = () => {\n        return ['Adding Plumbing','Attaching Vanity'];\n    }\n\n    const projectsForBathBathtub = () => {\n        return ['Adding Drain','Inserting Tub'];\n    }\n\n    const projectsForBathShower = () => {\n        return ['Tiling Wall','Tiling Floor', 'Adding Drain', 'Attaching Insert'];\n    }\n\n\n    // Wall\n\n    const projectsForWall = (subcategory) => {\n        if(subcategory === 'Drywall') {\n            return projectsForWallDrywall();\n        }\n        if(subcategory === 'Hanging') {\n            return projectsForWallHanging();\n        }\n        else {\n            return projectsForWallPainting();\n        }\n    }\n\n    const projectsForWallDrywall = () => {\n        return ['Patching','Adding Panel','Insulation'];\n    }\n\n    const projectsForWallHanging = () => {\n        return ['Hanging Painting','Adding Panel'];\n    }\n    \n    const projectsForWallPainting = () => {\n        return ['Painting Wall'];\n    }\n\n    // Outdoor\n\n    const projectsFortOutdoor = (subcategory) => {\n        if(subcategory === 'Patio') \n            return projectsForOutdoorPatio();\n        if(subcategory === 'Fire Pit') \n            return projectsForOutdoorFirePit();\n        else\n            return projectsForOutdoorExterior();\n    }\n\n    const projectsForOutdoorPatio = () => {\n        return ['Wood Patio','Paver Patio'];\n    }\n\n    const projectsForOutdoorFirePit = () => {\n        return ['Inground Pit','Paver Pit'];\n    }\n\n    const projectsForOutdoorExterior = () => {\n        return ['Siding','Painting','Stucco'];\n    }\n\n    // Kitchen \n\n    const projectsForKitchen = (subcategory) => {\n        if(subcategory === 'Sink') \n            return projectsForKitchenSink();\n        if(subcategory === 'Cabinets')\n            return projectsForKitchenCabinets();\n        else \n            return projectsForKitchenCounterTops();\n    }\n\n    const projectsForKitchenSink = () => {\n        return ['Installing Sink','Fixing Sink Plumbing'];\n    }\n\n    const projectsForKitchenCabinets = () => {\n        return ['Painting Cabinets','Installing Cabinets', 'Removing Cabinets'];\n    }\n\n    const projectsForKitchenCounterTops = () => {\n        return ['Granite','Butcher Block','Vinyl'];\n    } \n\n    // Roof \n\n    const projectsForRoof = (subcategory) => {\n        if(subcategory === 'Metal Roof') \n            return projectsForRoofMetalRoof();\n        if(subcategory === 'Vinyl Roof') \n            return projectsForRoofVinylRoof();\n        if(subcategory === 'Clay Tile')\n            return projectsForRoofClayTile();\n        else \n            return projectsForRoofConcreteTile();\n    }\n\n    const projectsForRoofMetalRoof = () => {\n        return ['Patching Roof','Replacing Roof'];\n    }\n\n    const projectsForRoofVinylRoof = () => {\n        return ['Patching Roof','Replacing Roof'];\n    }\n\n    const projectsForRoofClayTile = () =>  {\n        return ['Patching Roof','Replacing Roof'];\n    }\n\n    const projectsForRoofConcreteTile = () => {\n        return ['Patching Roof','Replacing Roof'];\n    }\n\n    // Lighting\n    const projectsForLighting = (subcategory) => {\n        if(subcategory === 'Indoor Lighting')\n            return projectsForLightingIndoorLighting();\n        else\n            return projectsForLightingOutdoorLighting();\n    }\n\n    const projectsForLightingIndoorLighting = () => {\n        return ['Ceiling Fan','Ceiling Light'];\n    }\n\n    const projectsForLightingOutdoorLighting = () => {\n        return ['Porch Lighting','Flood Light'];\n    }\n\n    const determineProjects = (subcategory) => {\n        if(category === 'Floor') \n            return projectsForFloor(subcategory);\n        else if(category === 'Bath') \n            return projectsForBath(subcategory);\n        else if(category === 'Wall') \n            return projectsForWall(subcategory);\n        else if(category === 'Outdoor')\n            return projectsFortOutdoor();\n        else if(category === 'Kitchen') \n            return projectsForKitchen(subcategory); \n        else if(category === 'Roof') \n            return projectsForRoof(subcategory);\n        else\n            return projectsForLighting(subcategory);\n    }\n    \n    const determineTools = (project) => {\n        return ['tool1','tool2','tool3'];\n    }\n\n    if(type === 'categories') {\n        return determineSubcategories(tile);\n    }\n    else if(type === 'subcategories') {\n        return determineProjects(tile);\n    }\n    else if(type === 'projects') {\n        return determineTools(tile);\n\n    }\n    else {\n        return '';\n    }\n\n}\n\nexport default TileGenerator;"]},"metadata":{},"sourceType":"module"}