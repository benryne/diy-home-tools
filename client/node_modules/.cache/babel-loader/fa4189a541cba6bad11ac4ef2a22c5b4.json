{"ast":null,"code":"var _jsxFileName = \"/Users/ben/Documents/diy-home-tools/client/src/Tile/tile.js\";\nimport React from 'react';\nimport './tile.css';\nimport TileGenerator from '../Generators/tileGenerator';\nimport TypeGenerator from '../Generators/typeGenerator';\nimport PluralToSingular from '../Generators/pluralToSignular';\nimport InfoGenerator from '../Generators/infoGenerator';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { set } from '../Actions';\n\nfunction Tile(tile) {\n  const dispatch = useDispatch();\n  const tileType = useSelector(state => state.tileType);\n  const category = useSelector(state => state.category);\n  const subcategory = useSelector(state => state.subcategory);\n  const project = useSelector(state => state.project);\n\n  const tileOnClick = () => {\n    const tiles = TileGenerator(tileType, tile.name, category, subcategory, project);\n    dispatch(set('tiles', tiles));\n    const singularTileType = PluralToSingular(tileType);\n    dispatch(set(singularTileType, tile.name));\n    const nextTileType = TypeGenerator(tileType);\n    dispatch(set('tile_type', nextTileType));\n\n    if (tileType === 'projects' || tileType === 'tools') {\n      const info = InfoGenerator(tileType, tile.name);\n      dispatch(set('info', info));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tile\",\n    onClick: tileOnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tile-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, tile.name), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"tile-image\",\n    src: \"method-draw-image.svg\",\n    height: \"150px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Tile;","map":{"version":3,"sources":["/Users/ben/Documents/diy-home-tools/client/src/Tile/tile.js"],"names":["React","TileGenerator","TypeGenerator","PluralToSingular","InfoGenerator","useSelector","useDispatch","set","Tile","tile","dispatch","tileType","state","category","subcategory","project","tileOnClick","tiles","name","singularTileType","nextTileType","info"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,GAAT,QAAoB,YAApB;;AAEA,SAASC,IAAT,CAAcC,IAAd,EAAoB;AAChB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,QAAQ,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,QAAhB,CAA5B;AACA,QAAME,QAAQ,GAAGR,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAA5B;AACA,QAAMC,WAAW,GAAGT,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACE,WAAhB,CAA/B;AACA,QAAMC,OAAO,GAAGV,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACG,OAAhB,CAA3B;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACtB,UAAMC,KAAK,GAAGhB,aAAa,CAACU,QAAD,EAAUF,IAAI,CAACS,IAAf,EAAoBL,QAApB,EAA6BC,WAA7B,EAAyCC,OAAzC,CAA3B;AACAL,IAAAA,QAAQ,CAACH,GAAG,CAAC,OAAD,EAASU,KAAT,CAAJ,CAAR;AAEA,UAAME,gBAAgB,GAAGhB,gBAAgB,CAACQ,QAAD,CAAzC;AACAD,IAAAA,QAAQ,CAACH,GAAG,CAACY,gBAAD,EAAkBV,IAAI,CAACS,IAAvB,CAAJ,CAAR;AAEA,UAAME,YAAY,GAAGlB,aAAa,CAACS,QAAD,CAAlC;AACAD,IAAAA,QAAQ,CAACH,GAAG,CAAC,WAAD,EAAaa,YAAb,CAAJ,CAAR;;AAEA,QAAGT,QAAQ,KAAK,UAAb,IAA2BA,QAAQ,KAAK,OAA3C,EAAoD;AAChD,YAAMU,IAAI,GAAGjB,aAAa,CAACO,QAAD,EAAUF,IAAI,CAACS,IAAf,CAA1B;AACAR,MAAAA,QAAQ,CAACH,GAAG,CAAC,MAAD,EAAQc,IAAR,CAAJ,CAAR;AACH;AACJ,GAdD;;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,OAAO,EAAEL,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BP,IAAI,CAACS,IAAjC,CADJ,eAEI;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,GAAG,EAAC,uBAAhC;AAAwD,IAAA,MAAM,EAAC,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAOH;;AAED,eAAeV,IAAf","sourcesContent":["import React from 'react';\nimport './tile.css';\nimport TileGenerator from '../Generators/tileGenerator';\nimport TypeGenerator from '../Generators/typeGenerator';\nimport PluralToSingular from '../Generators/pluralToSignular';\nimport InfoGenerator from '../Generators/infoGenerator';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { set } from '../Actions';\n\nfunction Tile(tile) {\n    const dispatch = useDispatch();\n    const tileType = useSelector(state => state.tileType);\n    const category = useSelector(state => state.category);\n    const subcategory = useSelector(state => state.subcategory);\n    const project = useSelector(state => state.project);\n\n    const tileOnClick = () => {\n        const tiles = TileGenerator(tileType,tile.name,category,subcategory,project);\n        dispatch(set('tiles',tiles));\n\n        const singularTileType = PluralToSingular(tileType);\n        dispatch(set(singularTileType,tile.name));\n\n        const nextTileType = TypeGenerator(tileType);\n        dispatch(set('tile_type',nextTileType));\n\n        if(tileType === 'projects' || tileType === 'tools') {\n            const info = InfoGenerator(tileType,tile.name);\n            dispatch(set('info',info));\n        }\n    }\n\n    return(\n        <div className='tile' onClick={tileOnClick}>\n            <div className='tile-name'>{tile.name}</div>\n            <img className='tile-image' src='method-draw-image.svg' height='150px'></img>\n        </div>\n    )\n\n}\n\nexport default Tile;"]},"metadata":{},"sourceType":"module"}